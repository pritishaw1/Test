# Import required libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Load the data into a pandas dataframe
data = pd.read_csv('your_data.csv')

# Preprocess the data by dropping any unnecessary columns and handling missing values
data = data.drop('dateTime', axis=1)  # Drop dateTime column as it is not needed for prediction
data = data.dropna()  # Drop any rows with missing values

# Split the data into training and testing sets
X = data.drop('miniApp', axis=1)  # Extract features (membershipnumber)
y = data['miniApp']  # Extract target variable (miniApp)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Create a Random Forest Classifier model and fit it to the training data
clf = RandomForestClassifier(n_estimators=100)
clf.fit(X_train, y_train)

# Use the model to make predictions on the testing data and calculate accuracy
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print('Accuracy:', accuracy)

# Use the model to predict the miniApp for a new customer
new_customer = pd.DataFrame({'membershipnumber': [123456]})
predicted_miniApp = clf.predict(new_customer)
print('Predicted miniApp:', predicted_miniApp)
